jobs:
  build-and-test:
    working_directory: ~/meteor
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-v3-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: npm-cache-v3-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Run Tests
          command: npm run test:unit
  package:
    working_directory: ~/meteor
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-v3-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Build for production
          command: npm run build -- --modern
      - run:
          name: zip dist
          command: zip -r meteor-dist.zip ./dist
      - store_artifacts:
          path: meteor-dist.zip
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: ~/meteor
          # Must be relative path from root
          paths:
            - dist
            - ansible
  deploy:
    working_directory: ~/meteor
    docker:
      - image: ansible/ansible-runner
    steps:
      - add_ssh_keys:
          fingerprints:
            - "5f:7e:ed:8d:47:13:0a:7e:8e:c4:72:b5:18:75:17:71"
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/meteor
      - run: |
          ssh-keyscan -H open-sky.fr >> ~/.ssh/known_hosts
      - run:
          name: Playbook time
          command: |
            cd ~/meteor/ansible
            ansible-playbook -i inventory open-sky.fr.yml
workflows:
  version: 2
  build-test-and-approval-package:
    jobs:
      - build-and-test
      - package:
          requires:
            - build-and-test
      - deploy:
          requires:
            - package

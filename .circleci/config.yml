jobs:
  install:
    working_directory: ~/meteor
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-v1-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: npm-cache-v1-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/meteor
          paths:
            - node_modules
  jest:
    working_directory: ~/meteor
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - attach_workspace:
          at: ~/meteor
      - run:
          name: Run Tests
          command: npm run test:unit
  start-ci-env:
    working_directory: ~/rocketMotorDesign
    machine: true
    steps:
      - run:
          command: ssh open-sky.fr "sudo /usr/sbin/a2ensite meteor-ci.conf && sudo systemctl reload apache2 && sudo /usr/sbin/service meteor-ci start"
  stop-ci-env:
    working_directory: ~/rocketMotorDesign
    machine: true
    steps:
      - run:
          command: ssh open-sky.fr "sudo /usr/sbin/a2dissite meteor-ci.conf && sudo systemctl reload apache2 && sudo /usr/sbin/service meteor-ci stop"
  cypress:
    working_directory: ~/meteor
    docker:
      - image: cypress/base:8
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Install wait-on
          command: npm install wait-on
      - run:
          name: Run server and cypress tests
          command: |
            npm run ci & ./node_modules/.bin/wait-on -v --timeout 240000 http://localhost:8080
            ./node_modules/.bin/cypress run
  package:
    working_directory: ~/meteor
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - attach_workspace:
          at: ~/meteor
      - run:
          name: Build for CI
          command: npm run build -- --modern --mode ci
      - run:
          name: zip dist
          command: zip -r meteor-dist.zip ./dist
      - store_artifacts:
          path: meteor-dist.zip
      - persist_to_workspace:
          root: ~/meteor
          paths:
            - dist
            - ansible
  deploy:
    working_directory: ~/meteor
    docker:
      - image: ansible/ansible-runner
    steps:
      - add_ssh_keys:
          fingerprints:
            - "5f:7e:ed:8d:47:13:0a:7e:8e:c4:72:b5:18:75:17:71"
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/meteor
      - run: |
          ssh-keyscan -H open-sky.fr >> ~/.ssh/known_hosts
      - run:
          name: Playbook time
          command: |
            cd ~/meteor/ansible
            ansible-playbook -i inventory open-sky.fr.yml
workflows:
  version: 2
  build-test-and-approval-package:
    jobs:
      - install
      - jest:
          requires:
            - install
      - start-ci-env:
          requires:
            - install
          filters:
            branches:
              only: master
      - cypress:
          requires:
            - start-ci-env
      - stop-ci-env:
          requires:
            - cypress
      - package:
          requires:
            - jest
            - cypress
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - package
